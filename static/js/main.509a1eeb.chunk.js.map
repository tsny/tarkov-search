{"version":3,"sources":["Header.js","SearchInput.js","EmojiResultRow.js","EmojiResults.js","filterEmoji.js","App.js","index.js"],"names":["Header","className","PureComponent","SearchInput","handleChange","event","props","textChange","onChange","this","EmojiResultsRow","onClick","e","preventDefault","console","log","title","price","EmojiResults","clipboard","Clipboard","destroy","emojiData","map","key","filterEmoji","searchText","maxResults","emojiList","filter","emoji","toLowerCase","includes","keywords","slice","App","handleSearchChange","setState","filteredEmoji","target","value","state","href","process","ReactDOM","render","document","getElementById"],"mappings":"sjTAGqBA,G,6KAIjB,OACE,4BAAQC,UAAU,oBAAlB,yB,GAL8BC,kBCEfC,G,kNAMnBC,aAAe,SAAAC,GAEb,EAAKC,MAAMC,WAAWF,I,uDAKtB,OACE,yBAAKJ,UAAU,0BACb,6BACE,2BAAOO,SAAUC,KAAKL,qB,GAhBSF,kB,gBCDpBQ,G,6KAgBjB,OACE,yBACET,UAAU,+CACVU,QATJ,SAAqBC,GAEnBA,EAAEC,iBACFC,QAAQC,IAAI,2BASV,0BAAMd,UAAU,SAASQ,KAAKH,MAAMU,MAApC,QAAgDP,KAAKH,MAAMW,OAC3D,0BAAMhB,UAAU,QAAhB,6B,GAvBqCC,kBCGxBgB,G,wLAQjBT,KAAKU,UAAY,IAAIC,IAAU,wB,6CAK/BX,KAAKU,UAAUE,Y,+BAKf,OACE,yBAAKpB,UAAU,2BACZQ,KAAKH,MAAMgB,UAAUC,KAAI,SAAAD,GAAS,OACjC,kBAAC,EAAD,CACEE,IAAKF,EAAUN,MACfA,MAAOM,EAAUN,MACjBC,MAAOK,EAAUL,gB,GAxBaf,kB,OCL3B,SAASuB,EAAYC,EAAYC,GAC9C,OAAOC,EACJC,QAAO,SAAAC,GACN,QAAIA,EAAMd,MAAMe,cAAcC,SAASN,EAAWK,kBAG9CD,EAAMG,SAASD,SAASN,MAK7BQ,MAAM,EAAGP,G,ICPOQ,E,kDAEnB,WAAY7B,GACX,IAAD,8BACE,cAAMA,IAMR8B,mBAAqB,SAAA/B,GAEnB,EAAKgC,SAAS,CACZC,cAAeb,EAAYpB,EAAMkC,OAAOC,MAAO,OARjD,EAAKC,MAAQ,CACXH,cAAeb,EAAY,GAAI,KAHnC,E,qDAgBE,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAalB,WAAYE,KAAK2B,qBAC9B,kBAAC,EAAD,CAAcd,UAAWb,KAAKgC,MAAMH,gBACpC,oCACA,uBAAGI,KAAI,UAAKC,iBAAL,eAAP,SACA,6BACA,uBAAGD,KAAI,UAAKC,iBAAL,iBAAP,WACA,6BACA,uBAAGD,KAAI,UAAKC,iBAAL,iBAAP,WACA,6BACA,uBAAGD,KAAI,UAAKC,iBAAL,iBAAP,gB,GA/ByBzC,iB,YCAjC0C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.509a1eeb.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport \"./css/Header.css\";\r\n\r\nexport default class Header extends PureComponent\r\n{\r\n  render()\r\n  {\r\n    return (\r\n      <header className=\"component-header\">\r\n        Tarkov Key Search\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./css/SearchInput.css\";\r\n\r\nexport default class SearchInput extends PureComponent\r\n{\r\n  static propTypes = {\r\n    textChange: PropTypes.func\r\n  };\r\n\r\n  handleChange = event =>\r\n  {\r\n    this.props.textChange(event);\r\n  };\r\n\r\n  render()\r\n  {\r\n    return (\r\n      <div className=\"component-search-input\">\r\n        <div>\r\n          <input onChange={this.handleChange} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./css/EmojiResultRow.css\";\r\n\r\nexport default class EmojiResultsRow extends PureComponent\r\n{\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    symbol: PropTypes.string,\r\n    onClick: PropTypes.func\r\n  };\r\n\r\n  render()\r\n  {\r\n    function handleClick(e)\r\n    {\r\n      e.preventDefault();\r\n      console.log('The link was clicked.');\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className=\"component-emoji-result-row copy-to-clipboard\"\r\n        onClick={handleClick}\r\n      // data-clipboard-text={this.props.symbol}\r\n      >\r\n        <span className=\"title\">{this.props.title} --- {this.props.price}</span>\r\n        <span className=\"info\">Click to see details</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Clipboard from \"clipboard\";\r\n\r\nimport EmojiResultRow from \"./EmojiResultRow\";\r\nimport \"./css/EmojiResults.css\";\r\n\r\nexport default class EmojiResults extends PureComponent\r\n{\r\n  static propTypes = {\r\n    emojiData: PropTypes.array\r\n  };\r\n\r\n  componentDidMount()\r\n  {\r\n    this.clipboard = new Clipboard(\".copy-to-clipboard\");\r\n  }\r\n\r\n  componentWillUnmount()\r\n  {\r\n    this.clipboard.destroy();\r\n  }\r\n\r\n  render()\r\n  {\r\n    return (\r\n      <div className=\"component-emoji-results\">\r\n        {this.props.emojiData.map(emojiData => (\r\n          <EmojiResultRow\r\n            key={emojiData.title}\r\n            title={emojiData.title}\r\n            price={emojiData.price}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import emojiList from \"./emojiList.json\";\n\nexport default function filterEmoji(searchText, maxResults) {\n  return emojiList\n    .filter(emoji => {\n      if (emoji.title.toLowerCase().includes(searchText.toLowerCase())) {\n        return true;\n      }\n      if (emoji.keywords.includes(searchText)) {\n        return true;\n      }\n      return false;\n    })\n    .slice(0, maxResults);\n}\n","import React, { PureComponent } from \"react\";\nimport Header from \"./Header\";\nimport SearchInput from \"./SearchInput\";\nimport EmojiResults from \"./EmojiResults\";\nimport filterEmoji from \"./filterEmoji\";\n\nexport default class App extends PureComponent\n{\n  constructor(props)\n  {\n    super(props);\n    this.state = {\n      filteredEmoji: filterEmoji(\"\", 20)\n    };\n  }\n\n  handleSearchChange = event =>\n  {\n    this.setState({\n      filteredEmoji: filterEmoji(event.target.value, 20)\n    });\n  };\n\n  render()\n  {\n    return (\n      <div>\n        <Header />\n        <SearchInput textChange={this.handleSearchChange} />\n        <EmojiResults emojiData={this.state.filteredEmoji} />\n        <h1>Maps</h1>\n        <a href={`${process.env.PUBLIC_URL}/woods.png`}>Woods</a>\n        <br></br>\n        <a href={`${process.env.PUBLIC_URL}/reserve.png`}>Reserve</a>\n        <br></br>\n        <a href={`${process.env.PUBLIC_URL}/factory.png`}>Factory</a>\n        <br></br>\n        <a href={`${process.env.PUBLIC_URL}/customs.png`}>Customs</a>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./css/index.css\";\r\nimport \"github-fork-ribbon-css/gh-fork-ribbon.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}